// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	group "go-zero-shorterurl/admin/api/internal/handler/group"
	recycle "go-zero-shorterurl/admin/api/internal/handler/recycle"
	user "go-zero-shorterurl/admin/api/internal/handler/user"
	"go-zero-shorterurl/admin/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/api/v1/groups",
				Handler: group.CreateGroupHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/api/v1/groups",
				Handler: group.UpdateGroupHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/groups",
				Handler: group.ListGroupsHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/api/v1/groups/:gid",
				Handler: group.DeleteGroupHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/api/v1/groups/sort",
				Handler: group.SortGroupsHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/recycle-bin/list",
				Handler: recycle.ListRecycleBinHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/api/v1/users/login",
				Handler: user.UserLoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/v1/users/register",
				Handler: user.UserRegisterHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/users/info",
				Handler: user.UserInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/api/v1/users/logout",
				Handler: user.UserLogoutHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/api/v1/users/update",
				Handler: user.UserUpdateHandler(serverCtx),
			},
		},
	)
}
