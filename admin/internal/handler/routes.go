// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	group "go-zero-shorterurl/admin/internal/handler/group"
	recycle "go-zero-shorterurl/admin/internal/handler/recycle"
	user "go-zero-shorterurl/admin/internal/handler/user"
	"go-zero-shorterurl/admin/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/api/v1/groups",
				Handler: group.SaveGroupHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/api/v1/groups",
				Handler: group.UpdateGroupHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/groups",
				Handler: group.ListGroupsHandler(serverCtx),
			},
			{
				Method:  http.MethodPatch,
				Path:    "/api/v1/groups/sort",
				Handler: group.SortGroupHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/api/v1/recycle-bin",
				Handler: recycle.SaveRecycleBinHandler(serverCtx),
			},
			{
				Method:  http.MethodDelete,
				Path:    "/api/v1/recycle-bin",
				Handler: recycle.RemoveFromRecycleBinHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/api/v1/recycle-bin",
				Handler: recycle.ListRecycleBinHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/api/v1/recycle-bin/recover",
				Handler: recycle.RecoverFromRecycleBinHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/basic-info/:username",
				Handler: user.GetUserBasicInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/check-login",
				Handler: user.CheckLoginHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/check-username",
				Handler: user.CheckUsernameHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/info",
				Handler: user.UserInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/login",
				Handler: user.UserLoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/logout",
				Handler: user.LogoutHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/password",
				Handler: user.UpdatePasswordHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/register",
				Handler: user.UserRegisterHandler(serverCtx),
			},
			{
				Method:  http.MethodPut,
				Path:    "/update",
				Handler: user.UserUpdateHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/v1/users"),
	)
}
