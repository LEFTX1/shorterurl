// Code generated by goctl. DO NOT EDIT.
package types

type GroupCreateReq struct {
	Name string `json:"name" validate:"required,max=32"`
}

type GroupResp struct {
	Gid            string `json:"gid"`            // 分组唯一标识
	Name           string `json:"name"`           // 分组名称
	Username       string `json:"username"`       // 创建者用户名
	SortOrder      int    `json:"sortOrder"`      // 排序序号
	ShortLinkCount int64  `json:"shortLinkCount"` // 分组中的短链接数量
	CreateTime     string `json:"createTime"`     // 创建时间
	UpdateTime     string `json:"updateTime"`     // 更新时间
}

type GroupSort struct {
	Gid       string `json:"gid" validate:"required"`
	SortOrder int    `json:"sortOrder" validate:"gte=0"`
}

type GroupSortReq struct {
	Sorts []GroupSort `json:"sorts" validate:"required,dive"`
}

type GroupUpdateReq struct {
	Gid  string `json:"gid" validate:"required"`         // 分组唯一标识
	Name string `json:"name" validate:"required,max=32"` // 新的分组名称
}

type RecycleBinPageReq struct {
	Current int64 `form:"current,default=1" validate:"required,min=1"`       // 当前页码
	Size    int64 `form:"size,default=10" validate:"required,min=1,max=100"` // 每页条数
}

type ShortLinkItem struct {
	Gid         string `json:"gid"`         // 所属分组ID
	OriginUrl   string `json:"originUrl"`   // 原始链接
	ShortUrl    string `json:"shortUrl"`    // 短链接
	Title       string `json:"title"`       // 链接标题
	Description string `json:"description"` // 链接描述
	CreateTime  string `json:"createTime"`  // 创建时间
	UpdateTime  string `json:"updateTime"`  // 更新时间
}

type ShortLinkPageResp struct {
	List  []ShortLinkItem `json:"list"`  // 短链接列表
	Total int64           `json:"total"` // 总记录数
}

type UserLoginReq struct {
	Username string `json:"username" validate:"required"`
	Password string `json:"password" validate:"required"`
}

type UserLoginResp struct {
	Token string `json:"token"`
}

type UserRegisterReq struct {
	Username string `json:"username" validate:"required,min=4,max=32"`
	Password string `json:"password" validate:"required,min=6,max=32"`
}

type UserResp struct {
	Username   string `json:"username"`
	RealName   string `json:"realName"`
	Phone      string `json:"phone"`
	Mail       string `json:"mail"`
	CreateTime string `json:"createTime"`
	UpdateTime string `json:"updateTime"`
}

type UserUpdateReq struct {
	Username string `json:"username" validate:"required"`
	Password string `json:"password,optional" validate:"omitempty,min=6,max=32"`
	RealName string `json:"realName,optional"`
	Phone    string `json:"phone,optional" validate:"omitempty,phone"`
	Mail     string `json:"mail,optional" validate:"omitempty,email"`
}
