// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.19.4
// source: link.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 创建短链接请求
type CreateShortLinkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Domain        string                 `protobuf:"bytes,1,opt,name=domain,proto3" json:"domain,omitempty"`                                       // 域名
	OriginUrl     string                 `protobuf:"bytes,2,opt,name=origin_url,json=originUrl,proto3" json:"origin_url,omitempty"`                // 原始链接
	Gid           string                 `protobuf:"bytes,3,opt,name=gid,proto3" json:"gid,omitempty"`                                             // 分组标识
	ValidDateType int32                  `protobuf:"varint,4,opt,name=valid_date_type,json=validDateType,proto3" json:"valid_date_type,omitempty"` // 有效期类型
	ValidDate     string                 `protobuf:"bytes,5,opt,name=valid_date,json=validDate,proto3" json:"valid_date,omitempty"`                // 有效期（ISO-8601格式）
	Describe      string                 `protobuf:"bytes,6,opt,name=describe,proto3" json:"describe,omitempty"`                                   // 描述
	CreatedType   int32                  `protobuf:"varint,7,opt,name=created_type,json=createdType,proto3" json:"created_type,omitempty"`         // 创建类型
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateShortLinkRequest) Reset() {
	*x = CreateShortLinkRequest{}
	mi := &file_link_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateShortLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateShortLinkRequest) ProtoMessage() {}

func (x *CreateShortLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateShortLinkRequest.ProtoReflect.Descriptor instead.
func (*CreateShortLinkRequest) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{0}
}

func (x *CreateShortLinkRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *CreateShortLinkRequest) GetOriginUrl() string {
	if x != nil {
		return x.OriginUrl
	}
	return ""
}

func (x *CreateShortLinkRequest) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *CreateShortLinkRequest) GetValidDateType() int32 {
	if x != nil {
		return x.ValidDateType
	}
	return 0
}

func (x *CreateShortLinkRequest) GetValidDate() string {
	if x != nil {
		return x.ValidDate
	}
	return ""
}

func (x *CreateShortLinkRequest) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *CreateShortLinkRequest) GetCreatedType() int32 {
	if x != nil {
		return x.CreatedType
	}
	return 0
}

// 创建短链接响应
type CreateShortLinkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FullShortUrl  string                 `protobuf:"bytes,1,opt,name=full_short_url,json=fullShortUrl,proto3" json:"full_short_url,omitempty"` // 完整短链接
	OriginUrl     string                 `protobuf:"bytes,2,opt,name=origin_url,json=originUrl,proto3" json:"origin_url,omitempty"`            // 原始链接
	Gid           string                 `protobuf:"bytes,3,opt,name=gid,proto3" json:"gid,omitempty"`                                         // 分组标识
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateShortLinkResponse) Reset() {
	*x = CreateShortLinkResponse{}
	mi := &file_link_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateShortLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateShortLinkResponse) ProtoMessage() {}

func (x *CreateShortLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateShortLinkResponse.ProtoReflect.Descriptor instead.
func (*CreateShortLinkResponse) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{1}
}

func (x *CreateShortLinkResponse) GetFullShortUrl() string {
	if x != nil {
		return x.FullShortUrl
	}
	return ""
}

func (x *CreateShortLinkResponse) GetOriginUrl() string {
	if x != nil {
		return x.OriginUrl
	}
	return ""
}

func (x *CreateShortLinkResponse) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

// 批量创建短链接请求
type BatchCreateShortLinkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OriginUrls    []string               `protobuf:"bytes,1,rep,name=origin_urls,json=originUrls,proto3" json:"origin_urls,omitempty"`             // 原始链接列表
	Domain        string                 `protobuf:"bytes,2,opt,name=domain,proto3" json:"domain,omitempty"`                                       // 域名
	Gid           string                 `protobuf:"bytes,3,opt,name=gid,proto3" json:"gid,omitempty"`                                             // 分组标识
	ValidDateType int32                  `protobuf:"varint,4,opt,name=valid_date_type,json=validDateType,proto3" json:"valid_date_type,omitempty"` // 有效期类型
	ValidDate     string                 `protobuf:"bytes,5,opt,name=valid_date,json=validDate,proto3" json:"valid_date,omitempty"`                // 有效期（ISO-8601格式）
	Describe      string                 `protobuf:"bytes,6,opt,name=describe,proto3" json:"describe,omitempty"`                                   // 描述
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchCreateShortLinkRequest) Reset() {
	*x = BatchCreateShortLinkRequest{}
	mi := &file_link_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCreateShortLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateShortLinkRequest) ProtoMessage() {}

func (x *BatchCreateShortLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateShortLinkRequest.ProtoReflect.Descriptor instead.
func (*BatchCreateShortLinkRequest) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{2}
}

func (x *BatchCreateShortLinkRequest) GetOriginUrls() []string {
	if x != nil {
		return x.OriginUrls
	}
	return nil
}

func (x *BatchCreateShortLinkRequest) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *BatchCreateShortLinkRequest) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *BatchCreateShortLinkRequest) GetValidDateType() int32 {
	if x != nil {
		return x.ValidDateType
	}
	return 0
}

func (x *BatchCreateShortLinkRequest) GetValidDate() string {
	if x != nil {
		return x.ValidDate
	}
	return ""
}

func (x *BatchCreateShortLinkRequest) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

// 单个创建结果
type BatchCreateResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FullShortUrl  string                 `protobuf:"bytes,1,opt,name=full_short_url,json=fullShortUrl,proto3" json:"full_short_url,omitempty"` // 完整短链接
	OriginUrl     string                 `protobuf:"bytes,2,opt,name=origin_url,json=originUrl,proto3" json:"origin_url,omitempty"`            // 原始链接
	Gid           string                 `protobuf:"bytes,3,opt,name=gid,proto3" json:"gid,omitempty"`                                         // 分组标识
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchCreateResult) Reset() {
	*x = BatchCreateResult{}
	mi := &file_link_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCreateResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateResult) ProtoMessage() {}

func (x *BatchCreateResult) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateResult.ProtoReflect.Descriptor instead.
func (*BatchCreateResult) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{3}
}

func (x *BatchCreateResult) GetFullShortUrl() string {
	if x != nil {
		return x.FullShortUrl
	}
	return ""
}

func (x *BatchCreateResult) GetOriginUrl() string {
	if x != nil {
		return x.OriginUrl
	}
	return ""
}

func (x *BatchCreateResult) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

// 批量创建短链接响应
type BatchCreateShortLinkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*BatchCreateResult   `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"` // 创建结果列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BatchCreateShortLinkResponse) Reset() {
	*x = BatchCreateShortLinkResponse{}
	mi := &file_link_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BatchCreateShortLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateShortLinkResponse) ProtoMessage() {}

func (x *BatchCreateShortLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateShortLinkResponse.ProtoReflect.Descriptor instead.
func (*BatchCreateShortLinkResponse) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{4}
}

func (x *BatchCreateShortLinkResponse) GetResults() []*BatchCreateResult {
	if x != nil {
		return x.Results
	}
	return nil
}

// 修改短链接请求
type UpdateShortLinkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FullShortUrl  string                 `protobuf:"bytes,1,opt,name=full_short_url,json=fullShortUrl,proto3" json:"full_short_url,omitempty"`     // 完整短链接
	OriginUrl     string                 `protobuf:"bytes,2,opt,name=origin_url,json=originUrl,proto3" json:"origin_url,omitempty"`                // 原始链接
	Gid           string                 `protobuf:"bytes,3,opt,name=gid,proto3" json:"gid,omitempty"`                                             // 分组标识
	ValidDateType int32                  `protobuf:"varint,4,opt,name=valid_date_type,json=validDateType,proto3" json:"valid_date_type,omitempty"` // 有效期类型
	ValidDate     string                 `protobuf:"bytes,5,opt,name=valid_date,json=validDate,proto3" json:"valid_date,omitempty"`                // 有效期（ISO-8601格式）
	Describe      string                 `protobuf:"bytes,6,opt,name=describe,proto3" json:"describe,omitempty"`                                   // 描述
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateShortLinkRequest) Reset() {
	*x = UpdateShortLinkRequest{}
	mi := &file_link_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateShortLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateShortLinkRequest) ProtoMessage() {}

func (x *UpdateShortLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateShortLinkRequest.ProtoReflect.Descriptor instead.
func (*UpdateShortLinkRequest) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateShortLinkRequest) GetFullShortUrl() string {
	if x != nil {
		return x.FullShortUrl
	}
	return ""
}

func (x *UpdateShortLinkRequest) GetOriginUrl() string {
	if x != nil {
		return x.OriginUrl
	}
	return ""
}

func (x *UpdateShortLinkRequest) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *UpdateShortLinkRequest) GetValidDateType() int32 {
	if x != nil {
		return x.ValidDateType
	}
	return 0
}

func (x *UpdateShortLinkRequest) GetValidDate() string {
	if x != nil {
		return x.ValidDate
	}
	return ""
}

func (x *UpdateShortLinkRequest) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

// 修改短链接响应（空结构体）
type UpdateShortLinkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateShortLinkResponse) Reset() {
	*x = UpdateShortLinkResponse{}
	mi := &file_link_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateShortLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateShortLinkResponse) ProtoMessage() {}

func (x *UpdateShortLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateShortLinkResponse.ProtoReflect.Descriptor instead.
func (*UpdateShortLinkResponse) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{6}
}

// 分页查询短链接请求
type PageShortLinkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gid           string                 `protobuf:"bytes,1,opt,name=gid,proto3" json:"gid,omitempty"`          // 分组标识
	Current       int32                  `protobuf:"varint,2,opt,name=current,proto3" json:"current,omitempty"` // 当前页
	Size          int32                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`       // 每页大小
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PageShortLinkRequest) Reset() {
	*x = PageShortLinkRequest{}
	mi := &file_link_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PageShortLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageShortLinkRequest) ProtoMessage() {}

func (x *PageShortLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageShortLinkRequest.ProtoReflect.Descriptor instead.
func (*PageShortLinkRequest) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{7}
}

func (x *PageShortLinkRequest) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *PageShortLinkRequest) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *PageShortLinkRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

// 短链接记录
type ShortLinkRecord struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FullShortUrl  string                 `protobuf:"bytes,1,opt,name=full_short_url,json=fullShortUrl,proto3" json:"full_short_url,omitempty"` // 完整短链接
	OriginUrl     string                 `protobuf:"bytes,2,opt,name=origin_url,json=originUrl,proto3" json:"origin_url,omitempty"`            // 原始链接
	Domain        string                 `protobuf:"bytes,3,opt,name=domain,proto3" json:"domain,omitempty"`                                   // 域名
	Gid           string                 `protobuf:"bytes,4,opt,name=gid,proto3" json:"gid,omitempty"`                                         // 分组标识
	CreateTime    string                 `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`         // 创建时间（ISO-8601格式）
	ValidDate     string                 `protobuf:"bytes,6,opt,name=valid_date,json=validDate,proto3" json:"valid_date,omitempty"`            // 有效期（ISO-8601格式）
	Describe      string                 `protobuf:"bytes,7,opt,name=describe,proto3" json:"describe,omitempty"`                               // 描述
	TotalPv       int32                  `protobuf:"varint,8,opt,name=total_pv,json=totalPv,proto3" json:"total_pv,omitempty"`                 // 总访问量
	TotalUv       int32                  `protobuf:"varint,9,opt,name=total_uv,json=totalUv,proto3" json:"total_uv,omitempty"`                 // 总独立访问量
	TotalUip      int32                  `protobuf:"varint,10,opt,name=total_uip,json=totalUip,proto3" json:"total_uip,omitempty"`             // 总IP数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShortLinkRecord) Reset() {
	*x = ShortLinkRecord{}
	mi := &file_link_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShortLinkRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortLinkRecord) ProtoMessage() {}

func (x *ShortLinkRecord) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortLinkRecord.ProtoReflect.Descriptor instead.
func (*ShortLinkRecord) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{8}
}

func (x *ShortLinkRecord) GetFullShortUrl() string {
	if x != nil {
		return x.FullShortUrl
	}
	return ""
}

func (x *ShortLinkRecord) GetOriginUrl() string {
	if x != nil {
		return x.OriginUrl
	}
	return ""
}

func (x *ShortLinkRecord) GetDomain() string {
	if x != nil {
		return x.Domain
	}
	return ""
}

func (x *ShortLinkRecord) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *ShortLinkRecord) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *ShortLinkRecord) GetValidDate() string {
	if x != nil {
		return x.ValidDate
	}
	return ""
}

func (x *ShortLinkRecord) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *ShortLinkRecord) GetTotalPv() int32 {
	if x != nil {
		return x.TotalPv
	}
	return 0
}

func (x *ShortLinkRecord) GetTotalUv() int32 {
	if x != nil {
		return x.TotalUv
	}
	return 0
}

func (x *ShortLinkRecord) GetTotalUip() int32 {
	if x != nil {
		return x.TotalUip
	}
	return 0
}

// 分页响应
type PageShortLinkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Records       []*ShortLinkRecord     `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`  // 短链接记录列表
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`     // 总记录数
	Size          int32                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`       // 每页大小
	Current       int32                  `protobuf:"varint,4,opt,name=current,proto3" json:"current,omitempty"` // 当前页
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PageShortLinkResponse) Reset() {
	*x = PageShortLinkResponse{}
	mi := &file_link_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PageShortLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageShortLinkResponse) ProtoMessage() {}

func (x *PageShortLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageShortLinkResponse.ProtoReflect.Descriptor instead.
func (*PageShortLinkResponse) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{9}
}

func (x *PageShortLinkResponse) GetRecords() []*ShortLinkRecord {
	if x != nil {
		return x.Records
	}
	return nil
}

func (x *PageShortLinkResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PageShortLinkResponse) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PageShortLinkResponse) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

// 保存到回收站请求
type SaveToRecycleBinRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gid           string                 `protobuf:"bytes,1,opt,name=gid,proto3" json:"gid,omitempty"`                                         // 分组标识
	FullShortUrl  string                 `protobuf:"bytes,2,opt,name=full_short_url,json=fullShortUrl,proto3" json:"full_short_url,omitempty"` // 完整短链接
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveToRecycleBinRequest) Reset() {
	*x = SaveToRecycleBinRequest{}
	mi := &file_link_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveToRecycleBinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveToRecycleBinRequest) ProtoMessage() {}

func (x *SaveToRecycleBinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveToRecycleBinRequest.ProtoReflect.Descriptor instead.
func (*SaveToRecycleBinRequest) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{10}
}

func (x *SaveToRecycleBinRequest) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *SaveToRecycleBinRequest) GetFullShortUrl() string {
	if x != nil {
		return x.FullShortUrl
	}
	return ""
}

// 保存到回收站响应
type SaveToRecycleBinResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 是否成功
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveToRecycleBinResponse) Reset() {
	*x = SaveToRecycleBinResponse{}
	mi := &file_link_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveToRecycleBinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveToRecycleBinResponse) ProtoMessage() {}

func (x *SaveToRecycleBinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveToRecycleBinResponse.ProtoReflect.Descriptor instead.
func (*SaveToRecycleBinResponse) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{11}
}

func (x *SaveToRecycleBinResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 从回收站恢复请求
type RecoverFromRecycleBinRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gid           string                 `protobuf:"bytes,1,opt,name=gid,proto3" json:"gid,omitempty"`                                         // 分组标识
	FullShortUrl  string                 `protobuf:"bytes,2,opt,name=full_short_url,json=fullShortUrl,proto3" json:"full_short_url,omitempty"` // 完整短链接
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecoverFromRecycleBinRequest) Reset() {
	*x = RecoverFromRecycleBinRequest{}
	mi := &file_link_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecoverFromRecycleBinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoverFromRecycleBinRequest) ProtoMessage() {}

func (x *RecoverFromRecycleBinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoverFromRecycleBinRequest.ProtoReflect.Descriptor instead.
func (*RecoverFromRecycleBinRequest) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{12}
}

func (x *RecoverFromRecycleBinRequest) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *RecoverFromRecycleBinRequest) GetFullShortUrl() string {
	if x != nil {
		return x.FullShortUrl
	}
	return ""
}

// 从回收站恢复响应
type RecoverFromRecycleBinResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 是否成功
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecoverFromRecycleBinResponse) Reset() {
	*x = RecoverFromRecycleBinResponse{}
	mi := &file_link_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecoverFromRecycleBinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecoverFromRecycleBinResponse) ProtoMessage() {}

func (x *RecoverFromRecycleBinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecoverFromRecycleBinResponse.ProtoReflect.Descriptor instead.
func (*RecoverFromRecycleBinResponse) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{13}
}

func (x *RecoverFromRecycleBinResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 从回收站删除请求
type RemoveFromRecycleBinRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gid           string                 `protobuf:"bytes,1,opt,name=gid,proto3" json:"gid,omitempty"`                                         // 分组标识
	FullShortUrl  string                 `protobuf:"bytes,2,opt,name=full_short_url,json=fullShortUrl,proto3" json:"full_short_url,omitempty"` // 完整短链接
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveFromRecycleBinRequest) Reset() {
	*x = RemoveFromRecycleBinRequest{}
	mi := &file_link_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveFromRecycleBinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFromRecycleBinRequest) ProtoMessage() {}

func (x *RemoveFromRecycleBinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFromRecycleBinRequest.ProtoReflect.Descriptor instead.
func (*RemoveFromRecycleBinRequest) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{14}
}

func (x *RemoveFromRecycleBinRequest) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *RemoveFromRecycleBinRequest) GetFullShortUrl() string {
	if x != nil {
		return x.FullShortUrl
	}
	return ""
}

// 从回收站删除响应
type RemoveFromRecycleBinResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // 是否成功
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RemoveFromRecycleBinResponse) Reset() {
	*x = RemoveFromRecycleBinResponse{}
	mi := &file_link_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RemoveFromRecycleBinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveFromRecycleBinResponse) ProtoMessage() {}

func (x *RemoveFromRecycleBinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveFromRecycleBinResponse.ProtoReflect.Descriptor instead.
func (*RemoveFromRecycleBinResponse) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{15}
}

func (x *RemoveFromRecycleBinResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 分页查询回收站短链接请求
type PageRecycleBinShortLinkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gids          []string               `protobuf:"bytes,1,rep,name=gids,proto3" json:"gids,omitempty"`        // 分组标识列表
	Current       int32                  `protobuf:"varint,2,opt,name=current,proto3" json:"current,omitempty"` // 当前页
	Size          int32                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`       // 每页大小
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PageRecycleBinShortLinkRequest) Reset() {
	*x = PageRecycleBinShortLinkRequest{}
	mi := &file_link_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PageRecycleBinShortLinkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageRecycleBinShortLinkRequest) ProtoMessage() {}

func (x *PageRecycleBinShortLinkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageRecycleBinShortLinkRequest.ProtoReflect.Descriptor instead.
func (*PageRecycleBinShortLinkRequest) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{16}
}

func (x *PageRecycleBinShortLinkRequest) GetGids() []string {
	if x != nil {
		return x.Gids
	}
	return nil
}

func (x *PageRecycleBinShortLinkRequest) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *PageRecycleBinShortLinkRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

// 分页查询回收站短链接响应
type PageRecycleBinShortLinkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Records       []*ShortLinkRecord     `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`  // 回收站短链接记录列表
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`     // 总记录数
	Size          int32                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`       // 每页大小
	Current       int32                  `protobuf:"varint,4,opt,name=current,proto3" json:"current,omitempty"` // 当前页
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PageRecycleBinShortLinkResponse) Reset() {
	*x = PageRecycleBinShortLinkResponse{}
	mi := &file_link_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PageRecycleBinShortLinkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PageRecycleBinShortLinkResponse) ProtoMessage() {}

func (x *PageRecycleBinShortLinkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PageRecycleBinShortLinkResponse.ProtoReflect.Descriptor instead.
func (*PageRecycleBinShortLinkResponse) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{17}
}

func (x *PageRecycleBinShortLinkResponse) GetRecords() []*ShortLinkRecord {
	if x != nil {
		return x.Records
	}
	return nil
}

func (x *PageRecycleBinShortLinkResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *PageRecycleBinShortLinkResponse) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *PageRecycleBinShortLinkResponse) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

// 获取单个短链接统计数据请求
type GetSingleStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FullShortUrl  string                 `protobuf:"bytes,1,opt,name=full_short_url,json=fullShortUrl,proto3" json:"full_short_url,omitempty"` // 完整短链接
	Gid           string                 `protobuf:"bytes,2,opt,name=gid,proto3" json:"gid,omitempty"`                                         // 分组标识
	StartDate     string                 `protobuf:"bytes,3,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`            // 开始日期（ISO-8601格式）
	EndDate       string                 `protobuf:"bytes,4,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`                  // 结束日期（ISO-8601格式）
	EnableStatus  int32                  `protobuf:"varint,5,opt,name=enable_status,json=enableStatus,proto3" json:"enable_status,omitempty"`  // 启用状态 0：启用 1：未启用
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSingleStatsRequest) Reset() {
	*x = GetSingleStatsRequest{}
	mi := &file_link_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSingleStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSingleStatsRequest) ProtoMessage() {}

func (x *GetSingleStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSingleStatsRequest.ProtoReflect.Descriptor instead.
func (*GetSingleStatsRequest) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{18}
}

func (x *GetSingleStatsRequest) GetFullShortUrl() string {
	if x != nil {
		return x.FullShortUrl
	}
	return ""
}

func (x *GetSingleStatsRequest) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *GetSingleStatsRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *GetSingleStatsRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *GetSingleStatsRequest) GetEnableStatus() int32 {
	if x != nil {
		return x.EnableStatus
	}
	return 0
}

// 每日统计
type DailyStat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Date          string                 `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"` // 日期
	Pv            int32                  `protobuf:"varint,2,opt,name=pv,proto3" json:"pv,omitempty"`    // 访问量
	Uv            int32                  `protobuf:"varint,3,opt,name=uv,proto3" json:"uv,omitempty"`    // 独立访问量
	Uip           int32                  `protobuf:"varint,4,opt,name=uip,proto3" json:"uip,omitempty"`  // IP数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DailyStat) Reset() {
	*x = DailyStat{}
	mi := &file_link_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DailyStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyStat) ProtoMessage() {}

func (x *DailyStat) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyStat.ProtoReflect.Descriptor instead.
func (*DailyStat) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{19}
}

func (x *DailyStat) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *DailyStat) GetPv() int32 {
	if x != nil {
		return x.Pv
	}
	return 0
}

func (x *DailyStat) GetUv() int32 {
	if x != nil {
		return x.Uv
	}
	return 0
}

func (x *DailyStat) GetUip() int32 {
	if x != nil {
		return x.Uip
	}
	return 0
}

// 地域统计
type LocaleCnStat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Locale        string                 `protobuf:"bytes,1,opt,name=locale,proto3" json:"locale,omitempty"` // 地区
	Cnt           int32                  `protobuf:"varint,2,opt,name=cnt,proto3" json:"cnt,omitempty"`      // 数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocaleCnStat) Reset() {
	*x = LocaleCnStat{}
	mi := &file_link_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocaleCnStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocaleCnStat) ProtoMessage() {}

func (x *LocaleCnStat) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocaleCnStat.ProtoReflect.Descriptor instead.
func (*LocaleCnStat) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{20}
}

func (x *LocaleCnStat) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *LocaleCnStat) GetCnt() int32 {
	if x != nil {
		return x.Cnt
	}
	return 0
}

// 浏览器统计
type BrowserStat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Browser       string                 `protobuf:"bytes,1,opt,name=browser,proto3" json:"browser,omitempty"` // 浏览器
	Cnt           int32                  `protobuf:"varint,2,opt,name=cnt,proto3" json:"cnt,omitempty"`        // 数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BrowserStat) Reset() {
	*x = BrowserStat{}
	mi := &file_link_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BrowserStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BrowserStat) ProtoMessage() {}

func (x *BrowserStat) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BrowserStat.ProtoReflect.Descriptor instead.
func (*BrowserStat) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{21}
}

func (x *BrowserStat) GetBrowser() string {
	if x != nil {
		return x.Browser
	}
	return ""
}

func (x *BrowserStat) GetCnt() int32 {
	if x != nil {
		return x.Cnt
	}
	return 0
}

// 操作系统统计
type OSStat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Os            string                 `protobuf:"bytes,1,opt,name=os,proto3" json:"os,omitempty"`    // 操作系统
	Cnt           int32                  `protobuf:"varint,2,opt,name=cnt,proto3" json:"cnt,omitempty"` // 数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OSStat) Reset() {
	*x = OSStat{}
	mi := &file_link_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OSStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OSStat) ProtoMessage() {}

func (x *OSStat) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OSStat.ProtoReflect.Descriptor instead.
func (*OSStat) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{22}
}

func (x *OSStat) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *OSStat) GetCnt() int32 {
	if x != nil {
		return x.Cnt
	}
	return 0
}

// 设备统计
type DeviceStat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Device        string                 `protobuf:"bytes,1,opt,name=device,proto3" json:"device,omitempty"` // 设备
	Cnt           int32                  `protobuf:"varint,2,opt,name=cnt,proto3" json:"cnt,omitempty"`      // 数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeviceStat) Reset() {
	*x = DeviceStat{}
	mi := &file_link_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeviceStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceStat) ProtoMessage() {}

func (x *DeviceStat) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceStat.ProtoReflect.Descriptor instead.
func (*DeviceStat) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{23}
}

func (x *DeviceStat) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *DeviceStat) GetCnt() int32 {
	if x != nil {
		return x.Cnt
	}
	return 0
}

// 网络统计
type NetworkStat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"` // 网络类型
	Cnt           int32                  `protobuf:"varint,2,opt,name=cnt,proto3" json:"cnt,omitempty"`        // 数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkStat) Reset() {
	*x = NetworkStat{}
	mi := &file_link_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkStat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkStat) ProtoMessage() {}

func (x *NetworkStat) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkStat.ProtoReflect.Descriptor instead.
func (*NetworkStat) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{24}
}

func (x *NetworkStat) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *NetworkStat) GetCnt() int32 {
	if x != nil {
		return x.Cnt
	}
	return 0
}

// 获取单个短链接统计数据响应
type GetSingleStatsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pv            int32                  `protobuf:"varint,1,opt,name=pv,proto3" json:"pv,omitempty"`                                             // 访问量
	Uv            int32                  `protobuf:"varint,2,opt,name=uv,proto3" json:"uv,omitempty"`                                             // 独立访问量
	Uip           int32                  `protobuf:"varint,3,opt,name=uip,proto3" json:"uip,omitempty"`                                           // IP数
	Daily         []*DailyStat           `protobuf:"bytes,4,rep,name=daily,proto3" json:"daily,omitempty"`                                        // 每日统计
	LocaleCnStats []*LocaleCnStat        `protobuf:"bytes,5,rep,name=locale_cn_stats,json=localeCnStats,proto3" json:"locale_cn_stats,omitempty"` // 地域统计
	BrowserStats  []*BrowserStat         `protobuf:"bytes,6,rep,name=browser_stats,json=browserStats,proto3" json:"browser_stats,omitempty"`      // 浏览器统计
	OsStats       []*OSStat              `protobuf:"bytes,7,rep,name=os_stats,json=osStats,proto3" json:"os_stats,omitempty"`                     // 操作系统统计
	DeviceStats   []*DeviceStat          `protobuf:"bytes,8,rep,name=device_stats,json=deviceStats,proto3" json:"device_stats,omitempty"`         // 设备统计
	NetworkStats  []*NetworkStat         `protobuf:"bytes,9,rep,name=network_stats,json=networkStats,proto3" json:"network_stats,omitempty"`      // 网络统计
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSingleStatsResponse) Reset() {
	*x = GetSingleStatsResponse{}
	mi := &file_link_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSingleStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSingleStatsResponse) ProtoMessage() {}

func (x *GetSingleStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSingleStatsResponse.ProtoReflect.Descriptor instead.
func (*GetSingleStatsResponse) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{25}
}

func (x *GetSingleStatsResponse) GetPv() int32 {
	if x != nil {
		return x.Pv
	}
	return 0
}

func (x *GetSingleStatsResponse) GetUv() int32 {
	if x != nil {
		return x.Uv
	}
	return 0
}

func (x *GetSingleStatsResponse) GetUip() int32 {
	if x != nil {
		return x.Uip
	}
	return 0
}

func (x *GetSingleStatsResponse) GetDaily() []*DailyStat {
	if x != nil {
		return x.Daily
	}
	return nil
}

func (x *GetSingleStatsResponse) GetLocaleCnStats() []*LocaleCnStat {
	if x != nil {
		return x.LocaleCnStats
	}
	return nil
}

func (x *GetSingleStatsResponse) GetBrowserStats() []*BrowserStat {
	if x != nil {
		return x.BrowserStats
	}
	return nil
}

func (x *GetSingleStatsResponse) GetOsStats() []*OSStat {
	if x != nil {
		return x.OsStats
	}
	return nil
}

func (x *GetSingleStatsResponse) GetDeviceStats() []*DeviceStat {
	if x != nil {
		return x.DeviceStats
	}
	return nil
}

func (x *GetSingleStatsResponse) GetNetworkStats() []*NetworkStat {
	if x != nil {
		return x.NetworkStats
	}
	return nil
}

// 获取分组短链接统计数据请求
type GetGroupStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gid           string                 `protobuf:"bytes,1,opt,name=gid,proto3" json:"gid,omitempty"`                              // 分组标识
	StartDate     string                 `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"` // 开始日期（ISO-8601格式）
	EndDate       string                 `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`       // 结束日期（ISO-8601格式）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGroupStatsRequest) Reset() {
	*x = GetGroupStatsRequest{}
	mi := &file_link_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGroupStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupStatsRequest) ProtoMessage() {}

func (x *GetGroupStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupStatsRequest.ProtoReflect.Descriptor instead.
func (*GetGroupStatsRequest) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{26}
}

func (x *GetGroupStatsRequest) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *GetGroupStatsRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *GetGroupStatsRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

// 获取分组短链接统计数据响应
type GetGroupStatsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pv            int32                  `protobuf:"varint,1,opt,name=pv,proto3" json:"pv,omitempty"`                                             // 访问量
	Uv            int32                  `protobuf:"varint,2,opt,name=uv,proto3" json:"uv,omitempty"`                                             // 独立访问量
	Uip           int32                  `protobuf:"varint,3,opt,name=uip,proto3" json:"uip,omitempty"`                                           // IP数
	Daily         []*DailyStat           `protobuf:"bytes,4,rep,name=daily,proto3" json:"daily,omitempty"`                                        // 每日统计
	LocaleCnStats []*LocaleCnStat        `protobuf:"bytes,5,rep,name=locale_cn_stats,json=localeCnStats,proto3" json:"locale_cn_stats,omitempty"` // 地域统计
	BrowserStats  []*BrowserStat         `protobuf:"bytes,6,rep,name=browser_stats,json=browserStats,proto3" json:"browser_stats,omitempty"`      // 浏览器统计
	OsStats       []*OSStat              `protobuf:"bytes,7,rep,name=os_stats,json=osStats,proto3" json:"os_stats,omitempty"`                     // 操作系统统计
	DeviceStats   []*DeviceStat          `protobuf:"bytes,8,rep,name=device_stats,json=deviceStats,proto3" json:"device_stats,omitempty"`         // 设备统计
	NetworkStats  []*NetworkStat         `protobuf:"bytes,9,rep,name=network_stats,json=networkStats,proto3" json:"network_stats,omitempty"`      // 网络统计
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetGroupStatsResponse) Reset() {
	*x = GetGroupStatsResponse{}
	mi := &file_link_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetGroupStatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGroupStatsResponse) ProtoMessage() {}

func (x *GetGroupStatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGroupStatsResponse.ProtoReflect.Descriptor instead.
func (*GetGroupStatsResponse) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{27}
}

func (x *GetGroupStatsResponse) GetPv() int32 {
	if x != nil {
		return x.Pv
	}
	return 0
}

func (x *GetGroupStatsResponse) GetUv() int32 {
	if x != nil {
		return x.Uv
	}
	return 0
}

func (x *GetGroupStatsResponse) GetUip() int32 {
	if x != nil {
		return x.Uip
	}
	return 0
}

func (x *GetGroupStatsResponse) GetDaily() []*DailyStat {
	if x != nil {
		return x.Daily
	}
	return nil
}

func (x *GetGroupStatsResponse) GetLocaleCnStats() []*LocaleCnStat {
	if x != nil {
		return x.LocaleCnStats
	}
	return nil
}

func (x *GetGroupStatsResponse) GetBrowserStats() []*BrowserStat {
	if x != nil {
		return x.BrowserStats
	}
	return nil
}

func (x *GetGroupStatsResponse) GetOsStats() []*OSStat {
	if x != nil {
		return x.OsStats
	}
	return nil
}

func (x *GetGroupStatsResponse) GetDeviceStats() []*DeviceStat {
	if x != nil {
		return x.DeviceStats
	}
	return nil
}

func (x *GetGroupStatsResponse) GetNetworkStats() []*NetworkStat {
	if x != nil {
		return x.NetworkStats
	}
	return nil
}

// 短链接分组内数量查询请求
type GetShortLinkCountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestParam  []string               `protobuf:"bytes,1,rep,name=request_param,json=requestParam,proto3" json:"request_param,omitempty"` // 分组标识列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetShortLinkCountRequest) Reset() {
	*x = GetShortLinkCountRequest{}
	mi := &file_link_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetShortLinkCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShortLinkCountRequest) ProtoMessage() {}

func (x *GetShortLinkCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShortLinkCountRequest.ProtoReflect.Descriptor instead.
func (*GetShortLinkCountRequest) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{28}
}

func (x *GetShortLinkCountRequest) GetRequestParam() []string {
	if x != nil {
		return x.RequestParam
	}
	return nil
}

// 单个分组数量结果
type GroupCount struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Gid            string                 `protobuf:"bytes,1,opt,name=gid,proto3" json:"gid,omitempty"`                                                // 分组标识
	ShortLinkCount int32                  `protobuf:"varint,2,opt,name=short_link_count,json=shortLinkCount,proto3" json:"short_link_count,omitempty"` // 短链接数量
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GroupCount) Reset() {
	*x = GroupCount{}
	mi := &file_link_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupCount) ProtoMessage() {}

func (x *GroupCount) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupCount.ProtoReflect.Descriptor instead.
func (*GroupCount) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{29}
}

func (x *GroupCount) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *GroupCount) GetShortLinkCount() int32 {
	if x != nil {
		return x.ShortLinkCount
	}
	return 0
}

// 查询短链接分组内数量响应
type GetShortLinkCountResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroupCounts   []*GroupCount          `protobuf:"bytes,1,rep,name=group_counts,json=groupCounts,proto3" json:"group_counts,omitempty"` // 分组数量列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetShortLinkCountResponse) Reset() {
	*x = GetShortLinkCountResponse{}
	mi := &file_link_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetShortLinkCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShortLinkCountResponse) ProtoMessage() {}

func (x *GetShortLinkCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShortLinkCountResponse.ProtoReflect.Descriptor instead.
func (*GetShortLinkCountResponse) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{30}
}

func (x *GetShortLinkCountResponse) GetGroupCounts() []*GroupCount {
	if x != nil {
		return x.GroupCounts
	}
	return nil
}

// 访问记录
type AccessRecord struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ip            string                 `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`                                   // 访问IP
	Browser       string                 `protobuf:"bytes,2,opt,name=browser,proto3" json:"browser,omitempty"`                         // 浏览器
	Os            string                 `protobuf:"bytes,3,opt,name=os,proto3" json:"os,omitempty"`                                   // 操作系统
	Network       string                 `protobuf:"bytes,4,opt,name=network,proto3" json:"network,omitempty"`                         // 网络环境
	Device        string                 `protobuf:"bytes,5,opt,name=device,proto3" json:"device,omitempty"`                           // 访问设备
	Locale        string                 `protobuf:"bytes,6,opt,name=locale,proto3" json:"locale,omitempty"`                           // 地区
	User          string                 `protobuf:"bytes,7,opt,name=user,proto3" json:"user,omitempty"`                               // 用户标识
	CreateTime    string                 `protobuf:"bytes,8,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"` // 访问时间（ISO-8601格式）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccessRecord) Reset() {
	*x = AccessRecord{}
	mi := &file_link_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessRecord) ProtoMessage() {}

func (x *AccessRecord) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessRecord.ProtoReflect.Descriptor instead.
func (*AccessRecord) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{31}
}

func (x *AccessRecord) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *AccessRecord) GetBrowser() string {
	if x != nil {
		return x.Browser
	}
	return ""
}

func (x *AccessRecord) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *AccessRecord) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *AccessRecord) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *AccessRecord) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *AccessRecord) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *AccessRecord) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

// 访问记录查询请求
type AccessRecordQueryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FullShortUrl  string                 `protobuf:"bytes,1,opt,name=full_short_url,json=fullShortUrl,proto3" json:"full_short_url,omitempty"` // 完整短链接
	Gid           string                 `protobuf:"bytes,2,opt,name=gid,proto3" json:"gid,omitempty"`                                         // 分组标识
	StartDate     string                 `protobuf:"bytes,3,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`            // 开始日期（ISO-8601格式）
	EndDate       string                 `protobuf:"bytes,4,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`                  // 结束日期（ISO-8601格式）
	Current       int32                  `protobuf:"varint,5,opt,name=current,proto3" json:"current,omitempty"`                                // 当前页
	Size          int32                  `protobuf:"varint,6,opt,name=size,proto3" json:"size,omitempty"`                                      // 每页大小
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccessRecordQueryRequest) Reset() {
	*x = AccessRecordQueryRequest{}
	mi := &file_link_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessRecordQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessRecordQueryRequest) ProtoMessage() {}

func (x *AccessRecordQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessRecordQueryRequest.ProtoReflect.Descriptor instead.
func (*AccessRecordQueryRequest) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{32}
}

func (x *AccessRecordQueryRequest) GetFullShortUrl() string {
	if x != nil {
		return x.FullShortUrl
	}
	return ""
}

func (x *AccessRecordQueryRequest) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *AccessRecordQueryRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *AccessRecordQueryRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *AccessRecordQueryRequest) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *AccessRecordQueryRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

// 访问记录查询响应
type AccessRecordQueryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Records       []*AccessRecord        `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`  // 访问记录列表
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`     // 总记录数
	Size          int32                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`       // 每页大小
	Current       int32                  `protobuf:"varint,4,opt,name=current,proto3" json:"current,omitempty"` // 当前页
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AccessRecordQueryResponse) Reset() {
	*x = AccessRecordQueryResponse{}
	mi := &file_link_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AccessRecordQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessRecordQueryResponse) ProtoMessage() {}

func (x *AccessRecordQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessRecordQueryResponse.ProtoReflect.Descriptor instead.
func (*AccessRecordQueryResponse) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{33}
}

func (x *AccessRecordQueryResponse) GetRecords() []*AccessRecord {
	if x != nil {
		return x.Records
	}
	return nil
}

func (x *AccessRecordQueryResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *AccessRecordQueryResponse) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *AccessRecordQueryResponse) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

// 分组访问记录查询请求
type GroupAccessRecordQueryRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gid           string                 `protobuf:"bytes,1,opt,name=gid,proto3" json:"gid,omitempty"`                              // 分组标识
	StartDate     string                 `protobuf:"bytes,2,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"` // 开始日期（ISO-8601格式）
	EndDate       string                 `protobuf:"bytes,3,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`       // 结束日期（ISO-8601格式）
	Current       int32                  `protobuf:"varint,4,opt,name=current,proto3" json:"current,omitempty"`                     // 当前页
	Size          int32                  `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`                           // 每页大小
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupAccessRecordQueryRequest) Reset() {
	*x = GroupAccessRecordQueryRequest{}
	mi := &file_link_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupAccessRecordQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupAccessRecordQueryRequest) ProtoMessage() {}

func (x *GroupAccessRecordQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupAccessRecordQueryRequest.ProtoReflect.Descriptor instead.
func (*GroupAccessRecordQueryRequest) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{34}
}

func (x *GroupAccessRecordQueryRequest) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *GroupAccessRecordQueryRequest) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *GroupAccessRecordQueryRequest) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *GroupAccessRecordQueryRequest) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *GroupAccessRecordQueryRequest) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

// 分组访问记录查询响应
type GroupAccessRecordQueryResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Records       []*AccessRecord        `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`  // 访问记录列表
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`     // 总记录数
	Size          int32                  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`       // 每页大小
	Current       int32                  `protobuf:"varint,4,opt,name=current,proto3" json:"current,omitempty"` // 当前页
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupAccessRecordQueryResponse) Reset() {
	*x = GroupAccessRecordQueryResponse{}
	mi := &file_link_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupAccessRecordQueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupAccessRecordQueryResponse) ProtoMessage() {}

func (x *GroupAccessRecordQueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupAccessRecordQueryResponse.ProtoReflect.Descriptor instead.
func (*GroupAccessRecordQueryResponse) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{35}
}

func (x *GroupAccessRecordQueryResponse) GetRecords() []*AccessRecord {
	if x != nil {
		return x.Records
	}
	return nil
}

func (x *GroupAccessRecordQueryResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *GroupAccessRecordQueryResponse) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *GroupAccessRecordQueryResponse) GetCurrent() int32 {
	if x != nil {
		return x.Current
	}
	return 0
}

// 获取URL标题请求
type GetUrlTitleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"` // 目标URL
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUrlTitleRequest) Reset() {
	*x = GetUrlTitleRequest{}
	mi := &file_link_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUrlTitleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUrlTitleRequest) ProtoMessage() {}

func (x *GetUrlTitleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUrlTitleRequest.ProtoReflect.Descriptor instead.
func (*GetUrlTitleRequest) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{36}
}

func (x *GetUrlTitleRequest) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

// 获取URL标题响应
type GetUrlTitleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"` // URL标题
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUrlTitleResponse) Reset() {
	*x = GetUrlTitleResponse{}
	mi := &file_link_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUrlTitleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUrlTitleResponse) ProtoMessage() {}

func (x *GetUrlTitleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUrlTitleResponse.ProtoReflect.Descriptor instead.
func (*GetUrlTitleResponse) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{37}
}

func (x *GetUrlTitleResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

// 短链接分组内数量查询请求
type GroupShortLinkCountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Gids          []string               `protobuf:"bytes,1,rep,name=gids,proto3" json:"gids,omitempty"` // 分组标识列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupShortLinkCountRequest) Reset() {
	*x = GroupShortLinkCountRequest{}
	mi := &file_link_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupShortLinkCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupShortLinkCountRequest) ProtoMessage() {}

func (x *GroupShortLinkCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupShortLinkCountRequest.ProtoReflect.Descriptor instead.
func (*GroupShortLinkCountRequest) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{38}
}

func (x *GroupShortLinkCountRequest) GetGids() []string {
	if x != nil {
		return x.Gids
	}
	return nil
}

// 短链接分组计数项
type ShortLinkGroupCountItem struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Gid            string                 `protobuf:"bytes,1,opt,name=gid,proto3" json:"gid,omitempty"`                                                // 分组ID
	ShortLinkCount int64                  `protobuf:"varint,2,opt,name=short_link_count,json=shortLinkCount,proto3" json:"short_link_count,omitempty"` // 短链接数量
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ShortLinkGroupCountItem) Reset() {
	*x = ShortLinkGroupCountItem{}
	mi := &file_link_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShortLinkGroupCountItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortLinkGroupCountItem) ProtoMessage() {}

func (x *ShortLinkGroupCountItem) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortLinkGroupCountItem.ProtoReflect.Descriptor instead.
func (*ShortLinkGroupCountItem) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{39}
}

func (x *ShortLinkGroupCountItem) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *ShortLinkGroupCountItem) GetShortLinkCount() int64 {
	if x != nil {
		return x.ShortLinkCount
	}
	return 0
}

// 查询短链接分组内数量响应
type GroupShortLinkCountResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	GroupCounts   []*ShortLinkGroupCountItem `protobuf:"bytes,1,rep,name=group_counts,json=groupCounts,proto3" json:"group_counts,omitempty"` // 分组计数列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GroupShortLinkCountResponse) Reset() {
	*x = GroupShortLinkCountResponse{}
	mi := &file_link_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroupShortLinkCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroupShortLinkCountResponse) ProtoMessage() {}

func (x *GroupShortLinkCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroupShortLinkCountResponse.ProtoReflect.Descriptor instead.
func (*GroupShortLinkCountResponse) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{40}
}

func (x *GroupShortLinkCountResponse) GetGroupCounts() []*ShortLinkGroupCountItem {
	if x != nil {
		return x.GroupCounts
	}
	return nil
}

// 短链接跳转请求
type RestoreUrlRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShortUri      string                 `protobuf:"bytes,1,opt,name=short_uri,json=shortUri,proto3" json:"short_uri,omitempty"` // 短链接后缀
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestoreUrlRequest) Reset() {
	*x = RestoreUrlRequest{}
	mi := &file_link_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreUrlRequest) ProtoMessage() {}

func (x *RestoreUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreUrlRequest.ProtoReflect.Descriptor instead.
func (*RestoreUrlRequest) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{41}
}

func (x *RestoreUrlRequest) GetShortUri() string {
	if x != nil {
		return x.ShortUri
	}
	return ""
}

// 短链接跳转响应
type RestoreUrlResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OriginUrl     string                 `protobuf:"bytes,1,opt,name=origin_url,json=originUrl,proto3" json:"origin_url,omitempty"` // 原始链接URL
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestoreUrlResponse) Reset() {
	*x = RestoreUrlResponse{}
	mi := &file_link_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreUrlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreUrlResponse) ProtoMessage() {}

func (x *RestoreUrlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreUrlResponse.ProtoReflect.Descriptor instead.
func (*RestoreUrlResponse) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{42}
}

func (x *RestoreUrlResponse) GetOriginUrl() string {
	if x != nil {
		return x.OriginUrl
	}
	return ""
}

// 短链接统计请求
type ShortLinkStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FullShortUrl  string                 `protobuf:"bytes,1,opt,name=full_short_url,json=fullShortUrl,proto3" json:"full_short_url,omitempty"` // 完整短链接
	Gid           string                 `protobuf:"bytes,2,opt,name=gid,proto3" json:"gid,omitempty"`                                         // 分组标识
	User          string                 `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`                                       // 用户标识
	Ip            string                 `protobuf:"bytes,4,opt,name=ip,proto3" json:"ip,omitempty"`                                           // 访问IP
	Browser       string                 `protobuf:"bytes,5,opt,name=browser,proto3" json:"browser,omitempty"`                                 // 浏览器
	Os            string                 `protobuf:"bytes,6,opt,name=os,proto3" json:"os,omitempty"`                                           // 操作系统
	Device        string                 `protobuf:"bytes,7,opt,name=device,proto3" json:"device,omitempty"`                                   // 访问设备
	Network       string                 `protobuf:"bytes,8,opt,name=network,proto3" json:"network,omitempty"`                                 // 访问网络
	Locale        string                 `protobuf:"bytes,9,opt,name=locale,proto3" json:"locale,omitempty"`                                   // 地区
	UvType        string                 `protobuf:"bytes,10,opt,name=uv_type,json=uvType,proto3" json:"uv_type,omitempty"`                    // 访客类型
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ShortLinkStatsRequest) Reset() {
	*x = ShortLinkStatsRequest{}
	mi := &file_link_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ShortLinkStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShortLinkStatsRequest) ProtoMessage() {}

func (x *ShortLinkStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShortLinkStatsRequest.ProtoReflect.Descriptor instead.
func (*ShortLinkStatsRequest) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{43}
}

func (x *ShortLinkStatsRequest) GetFullShortUrl() string {
	if x != nil {
		return x.FullShortUrl
	}
	return ""
}

func (x *ShortLinkStatsRequest) GetGid() string {
	if x != nil {
		return x.Gid
	}
	return ""
}

func (x *ShortLinkStatsRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ShortLinkStatsRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *ShortLinkStatsRequest) GetBrowser() string {
	if x != nil {
		return x.Browser
	}
	return ""
}

func (x *ShortLinkStatsRequest) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *ShortLinkStatsRequest) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *ShortLinkStatsRequest) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

func (x *ShortLinkStatsRequest) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *ShortLinkStatsRequest) GetUvType() string {
	if x != nil {
		return x.UvType
	}
	return ""
}

// 空响应
type EmptyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmptyResponse) Reset() {
	*x = EmptyResponse{}
	mi := &file_link_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmptyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmptyResponse) ProtoMessage() {}

func (x *EmptyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_link_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmptyResponse.ProtoReflect.Descriptor instead.
func (*EmptyResponse) Descriptor() ([]byte, []int) {
	return file_link_proto_rawDescGZIP(), []int{44}
}

var File_link_proto protoreflect.FileDescriptor

const file_link_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"link.proto\x12\tshortlink\"\xe7\x01\n" +
	"\x16CreateShortLinkRequest\x12\x16\n" +
	"\x06domain\x18\x01 \x01(\tR\x06domain\x12\x1d\n" +
	"\n" +
	"origin_url\x18\x02 \x01(\tR\toriginUrl\x12\x10\n" +
	"\x03gid\x18\x03 \x01(\tR\x03gid\x12&\n" +
	"\x0fvalid_date_type\x18\x04 \x01(\x05R\rvalidDateType\x12\x1d\n" +
	"\n" +
	"valid_date\x18\x05 \x01(\tR\tvalidDate\x12\x1a\n" +
	"\bdescribe\x18\x06 \x01(\tR\bdescribe\x12!\n" +
	"\fcreated_type\x18\a \x01(\x05R\vcreatedType\"p\n" +
	"\x17CreateShortLinkResponse\x12$\n" +
	"\x0efull_short_url\x18\x01 \x01(\tR\ffullShortUrl\x12\x1d\n" +
	"\n" +
	"origin_url\x18\x02 \x01(\tR\toriginUrl\x12\x10\n" +
	"\x03gid\x18\x03 \x01(\tR\x03gid\"\xcb\x01\n" +
	"\x1bBatchCreateShortLinkRequest\x12\x1f\n" +
	"\vorigin_urls\x18\x01 \x03(\tR\n" +
	"originUrls\x12\x16\n" +
	"\x06domain\x18\x02 \x01(\tR\x06domain\x12\x10\n" +
	"\x03gid\x18\x03 \x01(\tR\x03gid\x12&\n" +
	"\x0fvalid_date_type\x18\x04 \x01(\x05R\rvalidDateType\x12\x1d\n" +
	"\n" +
	"valid_date\x18\x05 \x01(\tR\tvalidDate\x12\x1a\n" +
	"\bdescribe\x18\x06 \x01(\tR\bdescribe\"j\n" +
	"\x11BatchCreateResult\x12$\n" +
	"\x0efull_short_url\x18\x01 \x01(\tR\ffullShortUrl\x12\x1d\n" +
	"\n" +
	"origin_url\x18\x02 \x01(\tR\toriginUrl\x12\x10\n" +
	"\x03gid\x18\x03 \x01(\tR\x03gid\"V\n" +
	"\x1cBatchCreateShortLinkResponse\x126\n" +
	"\aresults\x18\x01 \x03(\v2\x1c.shortlink.BatchCreateResultR\aresults\"\xd2\x01\n" +
	"\x16UpdateShortLinkRequest\x12$\n" +
	"\x0efull_short_url\x18\x01 \x01(\tR\ffullShortUrl\x12\x1d\n" +
	"\n" +
	"origin_url\x18\x02 \x01(\tR\toriginUrl\x12\x10\n" +
	"\x03gid\x18\x03 \x01(\tR\x03gid\x12&\n" +
	"\x0fvalid_date_type\x18\x04 \x01(\x05R\rvalidDateType\x12\x1d\n" +
	"\n" +
	"valid_date\x18\x05 \x01(\tR\tvalidDate\x12\x1a\n" +
	"\bdescribe\x18\x06 \x01(\tR\bdescribe\"\x19\n" +
	"\x17UpdateShortLinkResponse\"V\n" +
	"\x14PageShortLinkRequest\x12\x10\n" +
	"\x03gid\x18\x01 \x01(\tR\x03gid\x12\x18\n" +
	"\acurrent\x18\x02 \x01(\x05R\acurrent\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x05R\x04size\"\xaf\x02\n" +
	"\x0fShortLinkRecord\x12$\n" +
	"\x0efull_short_url\x18\x01 \x01(\tR\ffullShortUrl\x12\x1d\n" +
	"\n" +
	"origin_url\x18\x02 \x01(\tR\toriginUrl\x12\x16\n" +
	"\x06domain\x18\x03 \x01(\tR\x06domain\x12\x10\n" +
	"\x03gid\x18\x04 \x01(\tR\x03gid\x12\x1f\n" +
	"\vcreate_time\x18\x05 \x01(\tR\n" +
	"createTime\x12\x1d\n" +
	"\n" +
	"valid_date\x18\x06 \x01(\tR\tvalidDate\x12\x1a\n" +
	"\bdescribe\x18\a \x01(\tR\bdescribe\x12\x19\n" +
	"\btotal_pv\x18\b \x01(\x05R\atotalPv\x12\x19\n" +
	"\btotal_uv\x18\t \x01(\x05R\atotalUv\x12\x1b\n" +
	"\ttotal_uip\x18\n" +
	" \x01(\x05R\btotalUip\"\x91\x01\n" +
	"\x15PageShortLinkResponse\x124\n" +
	"\arecords\x18\x01 \x03(\v2\x1a.shortlink.ShortLinkRecordR\arecords\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x05R\x04size\x12\x18\n" +
	"\acurrent\x18\x04 \x01(\x05R\acurrent\"Q\n" +
	"\x17SaveToRecycleBinRequest\x12\x10\n" +
	"\x03gid\x18\x01 \x01(\tR\x03gid\x12$\n" +
	"\x0efull_short_url\x18\x02 \x01(\tR\ffullShortUrl\"4\n" +
	"\x18SaveToRecycleBinResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"V\n" +
	"\x1cRecoverFromRecycleBinRequest\x12\x10\n" +
	"\x03gid\x18\x01 \x01(\tR\x03gid\x12$\n" +
	"\x0efull_short_url\x18\x02 \x01(\tR\ffullShortUrl\"9\n" +
	"\x1dRecoverFromRecycleBinResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"U\n" +
	"\x1bRemoveFromRecycleBinRequest\x12\x10\n" +
	"\x03gid\x18\x01 \x01(\tR\x03gid\x12$\n" +
	"\x0efull_short_url\x18\x02 \x01(\tR\ffullShortUrl\"8\n" +
	"\x1cRemoveFromRecycleBinResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"b\n" +
	"\x1ePageRecycleBinShortLinkRequest\x12\x12\n" +
	"\x04gids\x18\x01 \x03(\tR\x04gids\x12\x18\n" +
	"\acurrent\x18\x02 \x01(\x05R\acurrent\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x05R\x04size\"\x9b\x01\n" +
	"\x1fPageRecycleBinShortLinkResponse\x124\n" +
	"\arecords\x18\x01 \x03(\v2\x1a.shortlink.ShortLinkRecordR\arecords\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x05R\x04size\x12\x18\n" +
	"\acurrent\x18\x04 \x01(\x05R\acurrent\"\xae\x01\n" +
	"\x15GetSingleStatsRequest\x12$\n" +
	"\x0efull_short_url\x18\x01 \x01(\tR\ffullShortUrl\x12\x10\n" +
	"\x03gid\x18\x02 \x01(\tR\x03gid\x12\x1d\n" +
	"\n" +
	"start_date\x18\x03 \x01(\tR\tstartDate\x12\x19\n" +
	"\bend_date\x18\x04 \x01(\tR\aendDate\x12#\n" +
	"\renable_status\x18\x05 \x01(\x05R\fenableStatus\"Q\n" +
	"\tDailyStat\x12\x12\n" +
	"\x04date\x18\x01 \x01(\tR\x04date\x12\x0e\n" +
	"\x02pv\x18\x02 \x01(\x05R\x02pv\x12\x0e\n" +
	"\x02uv\x18\x03 \x01(\x05R\x02uv\x12\x10\n" +
	"\x03uip\x18\x04 \x01(\x05R\x03uip\"8\n" +
	"\fLocaleCnStat\x12\x16\n" +
	"\x06locale\x18\x01 \x01(\tR\x06locale\x12\x10\n" +
	"\x03cnt\x18\x02 \x01(\x05R\x03cnt\"9\n" +
	"\vBrowserStat\x12\x18\n" +
	"\abrowser\x18\x01 \x01(\tR\abrowser\x12\x10\n" +
	"\x03cnt\x18\x02 \x01(\x05R\x03cnt\"*\n" +
	"\x06OSStat\x12\x0e\n" +
	"\x02os\x18\x01 \x01(\tR\x02os\x12\x10\n" +
	"\x03cnt\x18\x02 \x01(\x05R\x03cnt\"6\n" +
	"\n" +
	"DeviceStat\x12\x16\n" +
	"\x06device\x18\x01 \x01(\tR\x06device\x12\x10\n" +
	"\x03cnt\x18\x02 \x01(\x05R\x03cnt\"9\n" +
	"\vNetworkStat\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\x12\x10\n" +
	"\x03cnt\x18\x02 \x01(\x05R\x03cnt\"\x99\x03\n" +
	"\x16GetSingleStatsResponse\x12\x0e\n" +
	"\x02pv\x18\x01 \x01(\x05R\x02pv\x12\x0e\n" +
	"\x02uv\x18\x02 \x01(\x05R\x02uv\x12\x10\n" +
	"\x03uip\x18\x03 \x01(\x05R\x03uip\x12*\n" +
	"\x05daily\x18\x04 \x03(\v2\x14.shortlink.DailyStatR\x05daily\x12?\n" +
	"\x0flocale_cn_stats\x18\x05 \x03(\v2\x17.shortlink.LocaleCnStatR\rlocaleCnStats\x12;\n" +
	"\rbrowser_stats\x18\x06 \x03(\v2\x16.shortlink.BrowserStatR\fbrowserStats\x12,\n" +
	"\bos_stats\x18\a \x03(\v2\x11.shortlink.OSStatR\aosStats\x128\n" +
	"\fdevice_stats\x18\b \x03(\v2\x15.shortlink.DeviceStatR\vdeviceStats\x12;\n" +
	"\rnetwork_stats\x18\t \x03(\v2\x16.shortlink.NetworkStatR\fnetworkStats\"b\n" +
	"\x14GetGroupStatsRequest\x12\x10\n" +
	"\x03gid\x18\x01 \x01(\tR\x03gid\x12\x1d\n" +
	"\n" +
	"start_date\x18\x02 \x01(\tR\tstartDate\x12\x19\n" +
	"\bend_date\x18\x03 \x01(\tR\aendDate\"\x98\x03\n" +
	"\x15GetGroupStatsResponse\x12\x0e\n" +
	"\x02pv\x18\x01 \x01(\x05R\x02pv\x12\x0e\n" +
	"\x02uv\x18\x02 \x01(\x05R\x02uv\x12\x10\n" +
	"\x03uip\x18\x03 \x01(\x05R\x03uip\x12*\n" +
	"\x05daily\x18\x04 \x03(\v2\x14.shortlink.DailyStatR\x05daily\x12?\n" +
	"\x0flocale_cn_stats\x18\x05 \x03(\v2\x17.shortlink.LocaleCnStatR\rlocaleCnStats\x12;\n" +
	"\rbrowser_stats\x18\x06 \x03(\v2\x16.shortlink.BrowserStatR\fbrowserStats\x12,\n" +
	"\bos_stats\x18\a \x03(\v2\x11.shortlink.OSStatR\aosStats\x128\n" +
	"\fdevice_stats\x18\b \x03(\v2\x15.shortlink.DeviceStatR\vdeviceStats\x12;\n" +
	"\rnetwork_stats\x18\t \x03(\v2\x16.shortlink.NetworkStatR\fnetworkStats\"?\n" +
	"\x18GetShortLinkCountRequest\x12#\n" +
	"\rrequest_param\x18\x01 \x03(\tR\frequestParam\"H\n" +
	"\n" +
	"GroupCount\x12\x10\n" +
	"\x03gid\x18\x01 \x01(\tR\x03gid\x12(\n" +
	"\x10short_link_count\x18\x02 \x01(\x05R\x0eshortLinkCount\"U\n" +
	"\x19GetShortLinkCountResponse\x128\n" +
	"\fgroup_counts\x18\x01 \x03(\v2\x15.shortlink.GroupCountR\vgroupCounts\"\xc7\x01\n" +
	"\fAccessRecord\x12\x0e\n" +
	"\x02ip\x18\x01 \x01(\tR\x02ip\x12\x18\n" +
	"\abrowser\x18\x02 \x01(\tR\abrowser\x12\x0e\n" +
	"\x02os\x18\x03 \x01(\tR\x02os\x12\x18\n" +
	"\anetwork\x18\x04 \x01(\tR\anetwork\x12\x16\n" +
	"\x06device\x18\x05 \x01(\tR\x06device\x12\x16\n" +
	"\x06locale\x18\x06 \x01(\tR\x06locale\x12\x12\n" +
	"\x04user\x18\a \x01(\tR\x04user\x12\x1f\n" +
	"\vcreate_time\x18\b \x01(\tR\n" +
	"createTime\"\xba\x01\n" +
	"\x18AccessRecordQueryRequest\x12$\n" +
	"\x0efull_short_url\x18\x01 \x01(\tR\ffullShortUrl\x12\x10\n" +
	"\x03gid\x18\x02 \x01(\tR\x03gid\x12\x1d\n" +
	"\n" +
	"start_date\x18\x03 \x01(\tR\tstartDate\x12\x19\n" +
	"\bend_date\x18\x04 \x01(\tR\aendDate\x12\x18\n" +
	"\acurrent\x18\x05 \x01(\x05R\acurrent\x12\x12\n" +
	"\x04size\x18\x06 \x01(\x05R\x04size\"\x92\x01\n" +
	"\x19AccessRecordQueryResponse\x121\n" +
	"\arecords\x18\x01 \x03(\v2\x17.shortlink.AccessRecordR\arecords\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x05R\x04size\x12\x18\n" +
	"\acurrent\x18\x04 \x01(\x05R\acurrent\"\x99\x01\n" +
	"\x1dGroupAccessRecordQueryRequest\x12\x10\n" +
	"\x03gid\x18\x01 \x01(\tR\x03gid\x12\x1d\n" +
	"\n" +
	"start_date\x18\x02 \x01(\tR\tstartDate\x12\x19\n" +
	"\bend_date\x18\x03 \x01(\tR\aendDate\x12\x18\n" +
	"\acurrent\x18\x04 \x01(\x05R\acurrent\x12\x12\n" +
	"\x04size\x18\x05 \x01(\x05R\x04size\"\x97\x01\n" +
	"\x1eGroupAccessRecordQueryResponse\x121\n" +
	"\arecords\x18\x01 \x03(\v2\x17.shortlink.AccessRecordR\arecords\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\x12\x12\n" +
	"\x04size\x18\x03 \x01(\x05R\x04size\x12\x18\n" +
	"\acurrent\x18\x04 \x01(\x05R\acurrent\"&\n" +
	"\x12GetUrlTitleRequest\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\"+\n" +
	"\x13GetUrlTitleResponse\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\"0\n" +
	"\x1aGroupShortLinkCountRequest\x12\x12\n" +
	"\x04gids\x18\x01 \x03(\tR\x04gids\"U\n" +
	"\x17ShortLinkGroupCountItem\x12\x10\n" +
	"\x03gid\x18\x01 \x01(\tR\x03gid\x12(\n" +
	"\x10short_link_count\x18\x02 \x01(\x03R\x0eshortLinkCount\"d\n" +
	"\x1bGroupShortLinkCountResponse\x12E\n" +
	"\fgroup_counts\x18\x01 \x03(\v2\".shortlink.ShortLinkGroupCountItemR\vgroupCounts\"0\n" +
	"\x11RestoreUrlRequest\x12\x1b\n" +
	"\tshort_uri\x18\x01 \x01(\tR\bshortUri\"3\n" +
	"\x12RestoreUrlResponse\x12\x1d\n" +
	"\n" +
	"origin_url\x18\x01 \x01(\tR\toriginUrl\"\x80\x02\n" +
	"\x15ShortLinkStatsRequest\x12$\n" +
	"\x0efull_short_url\x18\x01 \x01(\tR\ffullShortUrl\x12\x10\n" +
	"\x03gid\x18\x02 \x01(\tR\x03gid\x12\x12\n" +
	"\x04user\x18\x03 \x01(\tR\x04user\x12\x0e\n" +
	"\x02ip\x18\x04 \x01(\tR\x02ip\x12\x18\n" +
	"\abrowser\x18\x05 \x01(\tR\abrowser\x12\x0e\n" +
	"\x02os\x18\x06 \x01(\tR\x02os\x12\x16\n" +
	"\x06device\x18\a \x01(\tR\x06device\x12\x18\n" +
	"\anetwork\x18\b \x01(\tR\anetwork\x12\x16\n" +
	"\x06locale\x18\t \x01(\tR\x06locale\x12\x17\n" +
	"\auv_type\x18\n" +
	" \x01(\tR\x06uvType\"\x0f\n" +
	"\rEmptyResponse2\xce\f\n" +
	"\x10ShortLinkService\x12X\n" +
	"\x0fShortLinkCreate\x12!.shortlink.CreateShortLinkRequest\x1a\".shortlink.CreateShortLinkResponse\x12g\n" +
	"\x14ShortLinkBatchCreate\x12&.shortlink.BatchCreateShortLinkRequest\x1a'.shortlink.BatchCreateShortLinkResponse\x12X\n" +
	"\x0fShortLinkUpdate\x12!.shortlink.UpdateShortLinkRequest\x1a\".shortlink.UpdateShortLinkResponse\x12R\n" +
	"\rShortLinkPage\x12\x1f.shortlink.PageShortLinkRequest\x1a .shortlink.PageShortLinkResponse\x12h\n" +
	"\x17ShortLinkListGroupCount\x12%.shortlink.GroupShortLinkCountRequest\x1a&.shortlink.GroupShortLinkCountResponse\x12I\n" +
	"\n" +
	"RestoreUrl\x12\x1c.shortlink.RestoreUrlRequest\x1a\x1d.shortlink.RestoreUrlResponse\x12L\n" +
	"\x0eShortLinkStats\x12 .shortlink.ShortLinkStatsRequest\x1a\x18.shortlink.EmptyResponse\x12Y\n" +
	"\x0eRecycleBinSave\x12\".shortlink.SaveToRecycleBinRequest\x1a#.shortlink.SaveToRecycleBinResponse\x12f\n" +
	"\x11RecycleBinRecover\x12'.shortlink.RecoverFromRecycleBinRequest\x1a(.shortlink.RecoverFromRecycleBinResponse\x12c\n" +
	"\x10RecycleBinRemove\x12&.shortlink.RemoveFromRecycleBinRequest\x1a'.shortlink.RemoveFromRecycleBinResponse\x12g\n" +
	"\x0eRecycleBinPage\x12).shortlink.PageRecycleBinShortLinkRequest\x1a*.shortlink.PageRecycleBinShortLinkResponse\x12U\n" +
	"\x0eStatsGetSingle\x12 .shortlink.GetSingleStatsRequest\x1a!.shortlink.GetSingleStatsResponse\x12R\n" +
	"\rStatsGetGroup\x12\x1f.shortlink.GetGroupStatsRequest\x1a .shortlink.GetGroupStatsResponse\x12c\n" +
	"\x16StatsGetShortLinkCount\x12#.shortlink.GetShortLinkCountRequest\x1a$.shortlink.GetShortLinkCountResponse\x12c\n" +
	"\x16StatsAccessRecordQuery\x12#.shortlink.AccessRecordQueryRequest\x1a$.shortlink.AccessRecordQueryResponse\x12r\n" +
	"\x1bStatsGroupAccessRecordQuery\x12(.shortlink.GroupAccessRecordQueryRequest\x1a).shortlink.GroupAccessRecordQueryResponse\x12L\n" +
	"\vUrlTitleGet\x12\x1d.shortlink.GetUrlTitleRequest\x1a\x1e.shortlink.GetUrlTitleResponseB\x06Z\x04./pbb\x06proto3"

var (
	file_link_proto_rawDescOnce sync.Once
	file_link_proto_rawDescData []byte
)

func file_link_proto_rawDescGZIP() []byte {
	file_link_proto_rawDescOnce.Do(func() {
		file_link_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_link_proto_rawDesc), len(file_link_proto_rawDesc)))
	})
	return file_link_proto_rawDescData
}

var file_link_proto_msgTypes = make([]protoimpl.MessageInfo, 45)
var file_link_proto_goTypes = []any{
	(*CreateShortLinkRequest)(nil),          // 0: shortlink.CreateShortLinkRequest
	(*CreateShortLinkResponse)(nil),         // 1: shortlink.CreateShortLinkResponse
	(*BatchCreateShortLinkRequest)(nil),     // 2: shortlink.BatchCreateShortLinkRequest
	(*BatchCreateResult)(nil),               // 3: shortlink.BatchCreateResult
	(*BatchCreateShortLinkResponse)(nil),    // 4: shortlink.BatchCreateShortLinkResponse
	(*UpdateShortLinkRequest)(nil),          // 5: shortlink.UpdateShortLinkRequest
	(*UpdateShortLinkResponse)(nil),         // 6: shortlink.UpdateShortLinkResponse
	(*PageShortLinkRequest)(nil),            // 7: shortlink.PageShortLinkRequest
	(*ShortLinkRecord)(nil),                 // 8: shortlink.ShortLinkRecord
	(*PageShortLinkResponse)(nil),           // 9: shortlink.PageShortLinkResponse
	(*SaveToRecycleBinRequest)(nil),         // 10: shortlink.SaveToRecycleBinRequest
	(*SaveToRecycleBinResponse)(nil),        // 11: shortlink.SaveToRecycleBinResponse
	(*RecoverFromRecycleBinRequest)(nil),    // 12: shortlink.RecoverFromRecycleBinRequest
	(*RecoverFromRecycleBinResponse)(nil),   // 13: shortlink.RecoverFromRecycleBinResponse
	(*RemoveFromRecycleBinRequest)(nil),     // 14: shortlink.RemoveFromRecycleBinRequest
	(*RemoveFromRecycleBinResponse)(nil),    // 15: shortlink.RemoveFromRecycleBinResponse
	(*PageRecycleBinShortLinkRequest)(nil),  // 16: shortlink.PageRecycleBinShortLinkRequest
	(*PageRecycleBinShortLinkResponse)(nil), // 17: shortlink.PageRecycleBinShortLinkResponse
	(*GetSingleStatsRequest)(nil),           // 18: shortlink.GetSingleStatsRequest
	(*DailyStat)(nil),                       // 19: shortlink.DailyStat
	(*LocaleCnStat)(nil),                    // 20: shortlink.LocaleCnStat
	(*BrowserStat)(nil),                     // 21: shortlink.BrowserStat
	(*OSStat)(nil),                          // 22: shortlink.OSStat
	(*DeviceStat)(nil),                      // 23: shortlink.DeviceStat
	(*NetworkStat)(nil),                     // 24: shortlink.NetworkStat
	(*GetSingleStatsResponse)(nil),          // 25: shortlink.GetSingleStatsResponse
	(*GetGroupStatsRequest)(nil),            // 26: shortlink.GetGroupStatsRequest
	(*GetGroupStatsResponse)(nil),           // 27: shortlink.GetGroupStatsResponse
	(*GetShortLinkCountRequest)(nil),        // 28: shortlink.GetShortLinkCountRequest
	(*GroupCount)(nil),                      // 29: shortlink.GroupCount
	(*GetShortLinkCountResponse)(nil),       // 30: shortlink.GetShortLinkCountResponse
	(*AccessRecord)(nil),                    // 31: shortlink.AccessRecord
	(*AccessRecordQueryRequest)(nil),        // 32: shortlink.AccessRecordQueryRequest
	(*AccessRecordQueryResponse)(nil),       // 33: shortlink.AccessRecordQueryResponse
	(*GroupAccessRecordQueryRequest)(nil),   // 34: shortlink.GroupAccessRecordQueryRequest
	(*GroupAccessRecordQueryResponse)(nil),  // 35: shortlink.GroupAccessRecordQueryResponse
	(*GetUrlTitleRequest)(nil),              // 36: shortlink.GetUrlTitleRequest
	(*GetUrlTitleResponse)(nil),             // 37: shortlink.GetUrlTitleResponse
	(*GroupShortLinkCountRequest)(nil),      // 38: shortlink.GroupShortLinkCountRequest
	(*ShortLinkGroupCountItem)(nil),         // 39: shortlink.ShortLinkGroupCountItem
	(*GroupShortLinkCountResponse)(nil),     // 40: shortlink.GroupShortLinkCountResponse
	(*RestoreUrlRequest)(nil),               // 41: shortlink.RestoreUrlRequest
	(*RestoreUrlResponse)(nil),              // 42: shortlink.RestoreUrlResponse
	(*ShortLinkStatsRequest)(nil),           // 43: shortlink.ShortLinkStatsRequest
	(*EmptyResponse)(nil),                   // 44: shortlink.EmptyResponse
}
var file_link_proto_depIdxs = []int32{
	3,  // 0: shortlink.BatchCreateShortLinkResponse.results:type_name -> shortlink.BatchCreateResult
	8,  // 1: shortlink.PageShortLinkResponse.records:type_name -> shortlink.ShortLinkRecord
	8,  // 2: shortlink.PageRecycleBinShortLinkResponse.records:type_name -> shortlink.ShortLinkRecord
	19, // 3: shortlink.GetSingleStatsResponse.daily:type_name -> shortlink.DailyStat
	20, // 4: shortlink.GetSingleStatsResponse.locale_cn_stats:type_name -> shortlink.LocaleCnStat
	21, // 5: shortlink.GetSingleStatsResponse.browser_stats:type_name -> shortlink.BrowserStat
	22, // 6: shortlink.GetSingleStatsResponse.os_stats:type_name -> shortlink.OSStat
	23, // 7: shortlink.GetSingleStatsResponse.device_stats:type_name -> shortlink.DeviceStat
	24, // 8: shortlink.GetSingleStatsResponse.network_stats:type_name -> shortlink.NetworkStat
	19, // 9: shortlink.GetGroupStatsResponse.daily:type_name -> shortlink.DailyStat
	20, // 10: shortlink.GetGroupStatsResponse.locale_cn_stats:type_name -> shortlink.LocaleCnStat
	21, // 11: shortlink.GetGroupStatsResponse.browser_stats:type_name -> shortlink.BrowserStat
	22, // 12: shortlink.GetGroupStatsResponse.os_stats:type_name -> shortlink.OSStat
	23, // 13: shortlink.GetGroupStatsResponse.device_stats:type_name -> shortlink.DeviceStat
	24, // 14: shortlink.GetGroupStatsResponse.network_stats:type_name -> shortlink.NetworkStat
	29, // 15: shortlink.GetShortLinkCountResponse.group_counts:type_name -> shortlink.GroupCount
	31, // 16: shortlink.AccessRecordQueryResponse.records:type_name -> shortlink.AccessRecord
	31, // 17: shortlink.GroupAccessRecordQueryResponse.records:type_name -> shortlink.AccessRecord
	39, // 18: shortlink.GroupShortLinkCountResponse.group_counts:type_name -> shortlink.ShortLinkGroupCountItem
	0,  // 19: shortlink.ShortLinkService.ShortLinkCreate:input_type -> shortlink.CreateShortLinkRequest
	2,  // 20: shortlink.ShortLinkService.ShortLinkBatchCreate:input_type -> shortlink.BatchCreateShortLinkRequest
	5,  // 21: shortlink.ShortLinkService.ShortLinkUpdate:input_type -> shortlink.UpdateShortLinkRequest
	7,  // 22: shortlink.ShortLinkService.ShortLinkPage:input_type -> shortlink.PageShortLinkRequest
	38, // 23: shortlink.ShortLinkService.ShortLinkListGroupCount:input_type -> shortlink.GroupShortLinkCountRequest
	41, // 24: shortlink.ShortLinkService.RestoreUrl:input_type -> shortlink.RestoreUrlRequest
	43, // 25: shortlink.ShortLinkService.ShortLinkStats:input_type -> shortlink.ShortLinkStatsRequest
	10, // 26: shortlink.ShortLinkService.RecycleBinSave:input_type -> shortlink.SaveToRecycleBinRequest
	12, // 27: shortlink.ShortLinkService.RecycleBinRecover:input_type -> shortlink.RecoverFromRecycleBinRequest
	14, // 28: shortlink.ShortLinkService.RecycleBinRemove:input_type -> shortlink.RemoveFromRecycleBinRequest
	16, // 29: shortlink.ShortLinkService.RecycleBinPage:input_type -> shortlink.PageRecycleBinShortLinkRequest
	18, // 30: shortlink.ShortLinkService.StatsGetSingle:input_type -> shortlink.GetSingleStatsRequest
	26, // 31: shortlink.ShortLinkService.StatsGetGroup:input_type -> shortlink.GetGroupStatsRequest
	28, // 32: shortlink.ShortLinkService.StatsGetShortLinkCount:input_type -> shortlink.GetShortLinkCountRequest
	32, // 33: shortlink.ShortLinkService.StatsAccessRecordQuery:input_type -> shortlink.AccessRecordQueryRequest
	34, // 34: shortlink.ShortLinkService.StatsGroupAccessRecordQuery:input_type -> shortlink.GroupAccessRecordQueryRequest
	36, // 35: shortlink.ShortLinkService.UrlTitleGet:input_type -> shortlink.GetUrlTitleRequest
	1,  // 36: shortlink.ShortLinkService.ShortLinkCreate:output_type -> shortlink.CreateShortLinkResponse
	4,  // 37: shortlink.ShortLinkService.ShortLinkBatchCreate:output_type -> shortlink.BatchCreateShortLinkResponse
	6,  // 38: shortlink.ShortLinkService.ShortLinkUpdate:output_type -> shortlink.UpdateShortLinkResponse
	9,  // 39: shortlink.ShortLinkService.ShortLinkPage:output_type -> shortlink.PageShortLinkResponse
	40, // 40: shortlink.ShortLinkService.ShortLinkListGroupCount:output_type -> shortlink.GroupShortLinkCountResponse
	42, // 41: shortlink.ShortLinkService.RestoreUrl:output_type -> shortlink.RestoreUrlResponse
	44, // 42: shortlink.ShortLinkService.ShortLinkStats:output_type -> shortlink.EmptyResponse
	11, // 43: shortlink.ShortLinkService.RecycleBinSave:output_type -> shortlink.SaveToRecycleBinResponse
	13, // 44: shortlink.ShortLinkService.RecycleBinRecover:output_type -> shortlink.RecoverFromRecycleBinResponse
	15, // 45: shortlink.ShortLinkService.RecycleBinRemove:output_type -> shortlink.RemoveFromRecycleBinResponse
	17, // 46: shortlink.ShortLinkService.RecycleBinPage:output_type -> shortlink.PageRecycleBinShortLinkResponse
	25, // 47: shortlink.ShortLinkService.StatsGetSingle:output_type -> shortlink.GetSingleStatsResponse
	27, // 48: shortlink.ShortLinkService.StatsGetGroup:output_type -> shortlink.GetGroupStatsResponse
	30, // 49: shortlink.ShortLinkService.StatsGetShortLinkCount:output_type -> shortlink.GetShortLinkCountResponse
	33, // 50: shortlink.ShortLinkService.StatsAccessRecordQuery:output_type -> shortlink.AccessRecordQueryResponse
	35, // 51: shortlink.ShortLinkService.StatsGroupAccessRecordQuery:output_type -> shortlink.GroupAccessRecordQueryResponse
	37, // 52: shortlink.ShortLinkService.UrlTitleGet:output_type -> shortlink.GetUrlTitleResponse
	36, // [36:53] is the sub-list for method output_type
	19, // [19:36] is the sub-list for method input_type
	19, // [19:19] is the sub-list for extension type_name
	19, // [19:19] is the sub-list for extension extendee
	0,  // [0:19] is the sub-list for field type_name
}

func init() { file_link_proto_init() }
func file_link_proto_init() {
	if File_link_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_link_proto_rawDesc), len(file_link_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   45,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_link_proto_goTypes,
		DependencyIndexes: file_link_proto_depIdxs,
		MessageInfos:      file_link_proto_msgTypes,
	}.Build()
	File_link_proto = out.File
	file_link_proto_goTypes = nil
	file_link_proto_depIdxs = nil
}
