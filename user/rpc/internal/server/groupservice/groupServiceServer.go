// Code generated by goctl. DO NOT EDIT.
// Source: user.proto

package server

import (
	"context"

	"shorterurl/user/rpc/internal/logic/groupservice"
	"shorterurl/user/rpc/internal/svc"
	"shorterurl/user/rpc/pb"
)

type GroupServiceServer struct {
	svcCtx *svc.ServiceContext
	__.UnimplementedGroupServiceServer
}

func NewGroupServiceServer(svcCtx *svc.ServiceContext) *GroupServiceServer {
	return &GroupServiceServer{
		svcCtx: svcCtx,
	}
}

// 创建分组
func (s *GroupServiceServer) GroupCreate(ctx context.Context, in *__.GroupSaveRequest) (*__.CommonResponse, error) {
	l := groupservicelogic.NewGroupCreateLogic(ctx, s.svcCtx)
	return l.GroupCreate(in)
}

// 获取分组列表
func (s *GroupServiceServer) GroupList(in *__.CommonRequest, stream __.GroupService_GroupListServer) error {
	l := groupservicelogic.NewGroupListLogic(stream.Context(), s.svcCtx)
	return l.GroupList(in, stream)
}

// 更新分组
func (s *GroupServiceServer) GroupUpdate(ctx context.Context, in *__.GroupUpdateRequest) (*__.CommonResponse, error) {
	l := groupservicelogic.NewGroupUpdateLogic(ctx, s.svcCtx)
	return l.GroupUpdate(in)
}

// 删除分组
func (s *GroupServiceServer) GroupDelete(ctx context.Context, in *__.GroupDeleteRequest) (*__.CommonResponse, error) {
	l := groupservicelogic.NewGroupDeleteLogic(ctx, s.svcCtx)
	return l.GroupDelete(in)
}

// 分组排序
func (s *GroupServiceServer) GroupSort(stream __.GroupService_GroupSortServer) error {
	l := groupservicelogic.NewGroupSortLogic(stream.Context(), s.svcCtx)
	return l.GroupSort(stream)
}
